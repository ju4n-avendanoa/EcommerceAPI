version: "3.9"
services:
  api:
    build:
      context: .
      target: development
    volumes:
      - ./:/usr/src/app # Mounts the current directory as a volume in the container
      - /usr/src/app/node_modules
    ports:
      - 5500:5000 # Maps port 5500 of the host to port 5000 of the container
    command: npm run devo # Runs the 'npm run devo' command inside the container
    depends_on:
      - mongodb # Specifies that this service depends on the 'mongodb' service
    networks:
      - myNetwork # Connects the service to the 'myNetwork' network

  mongodb:
    image: mongo # Uses the 'mongo' image from Docker Hub
    container_name: mongodb # Sets the name of the container to 'mongodb'
    restart: always # Restarts the container automatically if it stops
    volumes:
      - mongo-db:/data/db # Mounts the 'mongo-db' volume to persist MongoDB data
    networks:
      - myNetwork # Connects the service to the 'myNetwork' network

  mongo-express:
    image: mongo-express # Uses the 'mongo-express' image from Docker Hub
    container_name: mongo_express # Sets the name of the container to 'mongo_express'
    restart: always # Restarts the container automatically if it stops
    ports:
      - 8081:8081 # Maps port 8081 of the host to port 8081 of the container
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb # Sets the MongoDB server URL for mongo-express
      - ME_CONFIG_BASICAUTH_USERNAME=root # Sets the basic authentication username for mongo-express
      - ME_CONFIG_BASICAUTH_PASSWORD=root # Sets the basic authentication password for mongo-express
    networks:
      - myNetwork # Connects the service to the 'myNetwork' network

networks:
  myNetwork:
    driver: bridge # Specifies the network driver as 'bridge'

volumes:
  mongo-db: # Defines a named volume 'mongo-db' to store MongoDB data
